#!/usr/bin/env bash
# Script: configure_nginx_server.sh
# Description: Configures a new Ubuntu machine by installing Nginx, setting it to listen on port 80, and serving a page with "Hello World"
#
# This script automates the setup of an Nginx web server on an Ubuntu machine.
# It performs the following steps:
# 1. Updates and installs Nginx
# 2. Starts the Nginx service
# 3. Allows Nginx through the firewall
# 4. Sets user ownership for website files
# 5. Backs up the default index file and creates a new one with "Hello World"
# 6. Sets up a redirect to a YouTube video on /redirect_me
# 7. Creates a custom 404 error page
# 8. Restarts the Nginx service for changes to take effect
#
# Note: Ensure proper permissions and configurations are in place for successful execution.

echo -e "Updating and installing Nginx.\n"
sudo apt-get update -y -qq && \
	 sudo apt-get install nginx -y

echo -e "\nSetting up some minor configurations.\n"

# Starting the Nginx service
sudo service nginx start

# Allowing Nginx through the firewall
sudo ufw allow 'Nginx HTTP'

# Granting user ownership to website files for easy editing
sudo chown -R "$USER":"$USER" /var/www/html
sudo chmod -R 755 /var/www

# Backup the default index file
cp /var/www/html/index.nginx-debian.html /var/www/html/index.nginx-debian.html.bckp

# Creating a new index file with "Hello World"
echo -e "Hello World!" > /var/www/html/index.nginx-debian.html

# Setting up a redirect to a YouTube video on /redirect_me
sudo sed -i '24i\	rewrite ^/redirect_me https://www.youtube.com/watch?v=QH2-TGUlwu4 permanent;' /etc/nginx/sites-available/default

# Setting up a custom 404 error page
echo "Ceci n'est pas une page" >> /var/www/html/error_404.html
sudo sed -i '25i\	error_page 404 /error_404.html;' /etc/nginx/sites-available/default

# Restarting Nginx to apply changes
sudo service nginx restart

echo -e "\nConfiguration completed.\n"

